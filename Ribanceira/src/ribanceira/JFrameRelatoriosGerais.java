/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ribanceira;

import DAO.Contrato;
import DAO.Empresa;
import DAO.Funcionario;
import DAO.Ocorrencia;
import controladores.G_Contrato;
import controladores.G_Empresa;
import controladores.G_Funcionario;
import controladores.G_Ocorrencia;
import java.util.ArrayList;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import controladores.G_Ocorrencia;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;

/**
 *
 * @author Alessandra
 */
public class JFrameRelatoriosGerais extends javax.swing.JFrame {

    /**
     * Creates new form JFrameRelatoriosGerais
     */
    
    ArrayList<Contrato> listaContratos = new G_Contrato().getListaContrato();
    ArrayList<Empresa> listaEmpresa = new G_Empresa().getListaEmpresa();
    ArrayList<Funcionario> listaFuncionarios = new G_Funcionario().getListaFuncionario();
    
    public JFrameRelatoriosGerais() {
        initComponents();
        
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Relatórios Gerais");
        
        jComboBoxNomeRelatorio.removeAllItems();
        for (Empresa e : listaEmpresa) {
            jComboBoxNomeRelatorio.addItem(e.getNomeEmpresa());
        }
        jComboBoxCriterioRelatorio.setSelectedIndex(0);
        jRadioButtonAtivoRelatorio.setEnabled(true);
        jRadioButtonNaoAtivoRelatorio.setEnabled(true);
        jLabelNomeFuncionarioRelatorio.setEnabled(true);
        jLabelNomeFuncionarioRelatorio.setText("Nome empresa:");
        jComboBoxNomeRelatorio.setEnabled(true);
        jLabelCriterioFuncionarioRelatorio.setEnabled(false);
        jComboBoxCriterioFuncionarioRelatorio.setEnabled(false);
        jCheckBoxDado1.setVisible(true);
        jCheckBoxDado1.setText("Nome");
        jCheckBoxDado2.setVisible(true);
        jCheckBoxDado2.setText("Data Nasc.");
        jCheckBoxDado3.setVisible(true);
        jCheckBoxDado3.setText("Endereço");
        jCheckBoxDado4.setVisible(true);
        jCheckBoxDado4.setText("Telefone");
        jCheckBoxDado5.setVisible(true);
        jCheckBoxDado5.setText("E-mail");
        jCheckBoxDado6.setVisible(true);
        jCheckBoxDado6.setText("RG");
        jCheckBoxDado7.setVisible(true);
        jCheckBoxDado7.setText("CPF");
        jCheckBoxDado8.setVisible(true);
        jCheckBoxDado8.setText("Nº Cart. trab.");
        jCheckBoxDado9.setVisible(false);
        jCheckBoxDado10.setVisible(false);
        jCheckBoxDado11.setVisible(false);
        jCheckBoxDado12.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupAtivo = new javax.swing.ButtonGroup();
        jLabelCriterioRelatorio = new javax.swing.JLabel();
        jComboBoxCriterioRelatorio = new javax.swing.JComboBox<>();
        jLabelNomeFuncionarioRelatorio = new javax.swing.JLabel();
        jComboBoxNomeRelatorio = new javax.swing.JComboBox<>();
        jRadioButtonAtivoRelatorio = new javax.swing.JRadioButton();
        jRadioButtonNaoAtivoRelatorio = new javax.swing.JRadioButton();
        jLabelDadosRelatorio = new javax.swing.JLabel();
        jCheckBoxDado1 = new javax.swing.JCheckBox();
        jLabelCriterioFuncionarioRelatorio = new javax.swing.JLabel();
        jComboBoxCriterioFuncionarioRelatorio = new javax.swing.JComboBox<>();
        jCheckBoxDado2 = new javax.swing.JCheckBox();
        jCheckBoxDado3 = new javax.swing.JCheckBox();
        jCheckBoxDado4 = new javax.swing.JCheckBox();
        jCheckBoxDado5 = new javax.swing.JCheckBox();
        jCheckBoxDado6 = new javax.swing.JCheckBox();
        jCheckBoxDado7 = new javax.swing.JCheckBox();
        jCheckBoxDado8 = new javax.swing.JCheckBox();
        jCheckBoxDado9 = new javax.swing.JCheckBox();
        jCheckBoxDado10 = new javax.swing.JCheckBox();
        jCheckBoxDado11 = new javax.swing.JCheckBox();
        jCheckBoxDado12 = new javax.swing.JCheckBox();
        jButtonGerarRelatorio = new javax.swing.JButton();
        jLabelAjudaRelatorio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatórios Gerais");
        setResizable(false);

        jLabelCriterioRelatorio.setText("Critério do relatório:");

        jComboBoxCriterioRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empresa", "Funcionário" }));
        jComboBoxCriterioRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCriterioRelatorioActionPerformed(evt);
            }
        });

        jLabelNomeFuncionarioRelatorio.setText("Nome funcionário:");

        buttonGroupAtivo.add(jRadioButtonAtivoRelatorio);
        jRadioButtonAtivoRelatorio.setSelected(true);
        jRadioButtonAtivoRelatorio.setText("Ativo");
        jRadioButtonAtivoRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAtivoRelatorioActionPerformed(evt);
            }
        });

        buttonGroupAtivo.add(jRadioButtonNaoAtivoRelatorio);
        jRadioButtonNaoAtivoRelatorio.setText("Não ativo");

        jLabelDadosRelatorio.setText("Dados do relatório:");

        jCheckBoxDado1.setSelected(true);
        jCheckBoxDado1.setText("Carga horária");

        jLabelCriterioFuncionarioRelatorio.setText("Critério do funcionário:");

        jComboBoxCriterioFuncionarioRelatorio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contrato", "Ocorrências" }));
        jComboBoxCriterioFuncionarioRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCriterioFuncionarioRelatorioActionPerformed(evt);
            }
        });

        jCheckBoxDado2.setText("Hora entrada");

        jCheckBoxDado3.setText("Hora saída");

        jCheckBoxDado4.setText("Horas extras");

        jCheckBoxDado5.setText("Comissão");

        jCheckBoxDado6.setText("Duração");

        jCheckBoxDado7.setText("Experiência");

        jCheckBoxDado8.setText("Férias");

        jCheckBoxDado9.setText("VT");

        jCheckBoxDado10.setText("VR");

        jCheckBoxDado11.setText("Salario base");

        jCheckBoxDado12.setText("Impostos");

        jButtonGerarRelatorio.setText("Gerar relatório");
        jButtonGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarRelatorioActionPerformed(evt);
            }
        });

        jLabelAjudaRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/support-button.png"))); // NOI18N
        jLabelAjudaRelatorio.setText("Ajuda");
        jLabelAjudaRelatorio.setToolTipText("Clique aqui para obter ajuda");
        jLabelAjudaRelatorio.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelAjudaRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAjudaRelatorioMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCriterioRelatorio)
                    .addComponent(jLabelNomeFuncionarioRelatorio)
                    .addComponent(jLabelCriterioFuncionarioRelatorio)
                    .addComponent(jLabelDadosRelatorio)
                    .addComponent(jLabelAjudaRelatorio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButtonAtivoRelatorio)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonNaoAtivoRelatorio))
                    .addComponent(jCheckBoxDado11)
                    .addComponent(jCheckBoxDado9)
                    .addComponent(jCheckBoxDado7)
                    .addComponent(jCheckBoxDado5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBoxCriterioFuncionarioRelatorio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxNomeRelatorio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxCriterioRelatorio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBoxDado1)
                                .addComponent(jCheckBoxDado3))
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBoxDado4)
                                .addComponent(jCheckBoxDado2)
                                .addComponent(jCheckBoxDado6)
                                .addComponent(jCheckBoxDado8)
                                .addComponent(jCheckBoxDado10)
                                .addComponent(jCheckBoxDado12))))
                    .addComponent(jButtonGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCriterioRelatorio)
                    .addComponent(jComboBoxCriterioRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonNaoAtivoRelatorio)
                    .addComponent(jRadioButtonAtivoRelatorio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxNomeRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNomeFuncionarioRelatorio))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCriterioFuncionarioRelatorio)
                    .addComponent(jComboBoxCriterioFuncionarioRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDadosRelatorio)
                    .addComponent(jCheckBoxDado1)
                    .addComponent(jCheckBoxDado2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxDado4)
                            .addComponent(jCheckBoxDado3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxDado5)
                            .addComponent(jCheckBoxDado6))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxDado7)
                            .addComponent(jCheckBoxDado8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxDado9)
                            .addComponent(jCheckBoxDado10))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxDado11)
                            .addComponent(jCheckBoxDado12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButtonGerarRelatorio))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabelAjudaRelatorio)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonAtivoRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAtivoRelatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonAtivoRelatorioActionPerformed

    private void jLabelAjudaRelatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAjudaRelatorioMouseClicked
        // TODO add your handling code here:
        new JFrameRelatoriosGeraisAjuda();
    }//GEN-LAST:event_jLabelAjudaRelatorioMouseClicked

    private void jComboBoxCriterioRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCriterioRelatorioActionPerformed
        // TODO add your handling code here:
        if(jComboBoxCriterioRelatorio.getSelectedIndex()== 0) {
            jRadioButtonAtivoRelatorio.setEnabled(true);
            jRadioButtonNaoAtivoRelatorio.setEnabled(true);
            jLabelNomeFuncionarioRelatorio.setEnabled(true);
            jLabelNomeFuncionarioRelatorio.setText("Nome empresa:");
            jComboBoxNomeRelatorio.setEnabled(true);
            jLabelCriterioFuncionarioRelatorio.setEnabled(false);
            jComboBoxCriterioFuncionarioRelatorio.setEnabled(false);
            jCheckBoxDado1.setVisible(true);
            jCheckBoxDado1.setText("Nome");
            jCheckBoxDado2.setVisible(true);
            jCheckBoxDado2.setText("Data Nasc.");
            jCheckBoxDado3.setVisible(true);
            jCheckBoxDado3.setText("Endereço");
            jCheckBoxDado4.setVisible(true);
            jCheckBoxDado4.setText("Telefone");
            jCheckBoxDado5.setVisible(true);
            jCheckBoxDado5.setText("E-mail");
            jCheckBoxDado6.setVisible(true);
            jCheckBoxDado6.setText("RG");
            jCheckBoxDado7.setVisible(true);
            jCheckBoxDado7.setText("CPF");
            jCheckBoxDado8.setVisible(true);
            jCheckBoxDado8.setText("Nº Cart. trab.");
            jCheckBoxDado9.setVisible(false);
            jCheckBoxDado10.setVisible(false);
            jCheckBoxDado11.setVisible(false);
            jCheckBoxDado12.setVisible(false);
            jComboBoxNomeRelatorio.removeAllItems();
            for (Empresa e : listaEmpresa) {
                jComboBoxNomeRelatorio.addItem(e.getNomeEmpresa());
            }
        } 
        else {
            jRadioButtonAtivoRelatorio.setEnabled(false);
            jRadioButtonNaoAtivoRelatorio.setEnabled(false);
            jLabelNomeFuncionarioRelatorio.setEnabled(true);
            jLabelNomeFuncionarioRelatorio.setText("Nome funcionário:");
            jComboBoxNomeRelatorio.setEnabled(true);
            jComboBoxNomeRelatorio.removeAllItems();
            jLabelCriterioFuncionarioRelatorio.setEnabled(true);
            jComboBoxCriterioFuncionarioRelatorio.setEnabled(true);
            for (Funcionario f : listaFuncionarios) {
                if(f.isAtivo()){
                    jComboBoxNomeRelatorio.addItem(f.getNome());
                }
            }
            jComboBoxCriterioFuncionarioRelatorioActionPerformed(evt);
        }
    }//GEN-LAST:event_jComboBoxCriterioRelatorioActionPerformed

    private void jComboBoxCriterioFuncionarioRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCriterioFuncionarioRelatorioActionPerformed
        // TODO add your handling code here:
        if(jComboBoxCriterioFuncionarioRelatorio.getSelectedIndex() == 0) {
                jCheckBoxDado1.setVisible(true);
                jCheckBoxDado1.setText("Carga horária");
                jCheckBoxDado2.setVisible(true);
                jCheckBoxDado2.setText("Hora entrada");
                jCheckBoxDado3.setVisible(true);
                jCheckBoxDado3.setText("HoraSaida");
                jCheckBoxDado4.setVisible(true);
                jCheckBoxDado4.setText("Horas extras");
                jCheckBoxDado5.setVisible(true);
                jCheckBoxDado5.setText("Comissão");
                jCheckBoxDado6.setVisible(true);
                jCheckBoxDado6.setText("Duração");
                jCheckBoxDado7.setVisible(true);
                jCheckBoxDado7.setText("Experiência");
                jCheckBoxDado8.setVisible(true);
                jCheckBoxDado8.setText("Férias");
                jCheckBoxDado9.setVisible(true);
                jCheckBoxDado9.setText("VT");
                jCheckBoxDado10.setVisible(true);
                jCheckBoxDado10.setText("VR");
                jCheckBoxDado11.setVisible(true);
                jCheckBoxDado11.setText("Salário base");
                jCheckBoxDado12.setVisible(true);
                jCheckBoxDado12.setText("Impostos");
            } else if(jComboBoxCriterioFuncionarioRelatorio.getSelectedIndex() == 1) {
                jCheckBoxDado1.setVisible(true);
                jCheckBoxDado1.setText("Data");
                jCheckBoxDado2.setVisible(true);
                jCheckBoxDado2.setText("Tipo");
                jCheckBoxDado3.setVisible(true);
                jCheckBoxDado3.setText("Justificado");
                jCheckBoxDado4.setVisible(true);
                jCheckBoxDado4.setText("Valor");
                jCheckBoxDado5.setVisible(false);
                jCheckBoxDado6.setVisible(false);
                jCheckBoxDado7.setVisible(false);
                jCheckBoxDado8.setVisible(false);
                jCheckBoxDado9.setVisible(false);
                jCheckBoxDado10.setVisible(false);
                jCheckBoxDado11.setVisible(false);
                jCheckBoxDado12.setVisible(false);
            }
    }//GEN-LAST:event_jComboBoxCriterioFuncionarioRelatorioActionPerformed

    private void jButtonGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarRelatorioActionPerformed
        // TODO add your handling code here:
        if(jComboBoxCriterioRelatorio.getSelectedIndex() == 0) {
            Document doc = new Document();
            Empresa empresa = listaEmpresa.get(jComboBoxNomeRelatorio.getSelectedIndex());
            ArrayList<Contrato> listaContratoEmpresa = new G_Contrato().getListaContrato(empresa);
            String nomeArquivo = empresa.getNomeEmpresa() + new Date().getTime() + ".pdf";
            
            if(jRadioButtonAtivoRelatorio.isSelected()) {
                try {
                    PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                    doc.open();
                    doc.add(new Paragraph("RELATÓRIO: Lista de funcionário de " + empresa.getNomeEmpresa()));
                    doc.add(new Paragraph("CNPJ: " + empresa.getCnpj()));                    
                    doc.add(new Paragraph(" "));     
                } catch (DocumentException | FileNotFoundException ex) {
                    System.out.println("Error: " + ex);
                }
                for(Contrato c : listaContratoEmpresa) {
                    if(c.getFuncionario().isAtivo()) {
                        try {
                            System.out.println("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 2");
                            PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                            doc.open();
                            doc.add(new Paragraph("Nome: " + c.getFuncionario().getNome()));
                            if(jCheckBoxDado2.isSelected()) {
                                doc.add(new Paragraph("Data de nascimento: " + c.getFuncionario().getDataNascimento()));
                            }
                            if(jCheckBoxDado3.isSelected()) {
                                doc.add(new Paragraph("Endereço: " + c.getFuncionario().getEndereco()));
                            }
                            if(jCheckBoxDado4.isSelected()) {
                                doc.add(new Paragraph("Telefone: " + c.getFuncionario().getTelefone()));
                            }
                            if(jCheckBoxDado5.isSelected()) {
                                doc.add(new Paragraph("E-mail: " + c.getFuncionario().getEmail()));
                            }
                            if(jCheckBoxDado6.isSelected()) {
                                doc.add(new Paragraph("RG: " + c.getFuncionario().getRg()));
                            }
                            if(jCheckBoxDado7.isSelected()) {
                                doc.add(new Paragraph("CPF: " + c.getFuncionario().getCpf()));
                            }
                            if(jCheckBoxDado8.isSelected()) {
                                doc.add(new Paragraph("Carteira de trabalho: " + c.getFuncionario().getNumeroCarteiraTrabalho()));
                            }
                            doc.add(new Paragraph("---------------------------------------------------------------------------------------------------------------------------------"));
                        } catch (DocumentException | FileNotFoundException ex) {
                            System.out.println("Error: " + ex);
                        }  
                    }
                }
            }
            else {
                try {
                    PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                    doc.open();
                    doc.add(new Paragraph("RELATÓRIO: Lista de funcionário de " + empresa.getNomeEmpresa()));
                    doc.add(new Paragraph("CNPJ: " + empresa.getCnpj()));                    
                    doc.add(new Paragraph(" "));     
                } catch (DocumentException | FileNotFoundException ex) {
                    System.out.println("Error: " + ex);
                }
                for(Contrato c : listaContratos) {
                    if(c.getEmpresa().equals(empresa)) {
                        if(!c.getFuncionario().isAtivo()) {
                            try {
                                PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                                doc.open();
                                doc.add(new Paragraph("Nome: " + c.getFuncionario().getNome()));
                                if(jCheckBoxDado2.isSelected()) {
                                    doc.add(new Paragraph("Data de nascimento: " + c.getFuncionario().getDataNascimento()));
                                }
                                if(jCheckBoxDado3.isSelected()) {
                                    doc.add(new Paragraph("Endereço: " + c.getFuncionario().getEndereco()));
                                }
                                if(jCheckBoxDado4.isSelected()) {
                                    doc.add(new Paragraph("Telefone: " + c.getFuncionario().getTelefone()));
                                }
                                if(jCheckBoxDado5.isSelected()) {
                                    doc.add(new Paragraph("E-mail: " + c.getFuncionario().getEmail()));
                                }
                                if(jCheckBoxDado6.isSelected()) {
                                    doc.add(new Paragraph("RG: " + c.getFuncionario().getRg()));
                                }
                                if(jCheckBoxDado7.isSelected()) {
                                    doc.add(new Paragraph("CPF: " + c.getFuncionario().getCpf()));
                                }
                                if(jCheckBoxDado8.isSelected()) {
                                    doc.add(new Paragraph("Carteira de trabalho: " + c.getFuncionario().getNumeroCarteiraTrabalho()));
                                }
                                doc.add(new Paragraph("---------------------------------------------------------------------------------------------------------------------------------"));
                            } catch (DocumentException | FileNotFoundException ex) {
                                System.out.println("Error: " + ex);
                            }  
                        }
                    }
                }
            }
            doc.close();
            try {
                Desktop.getDesktop().open(new File(nomeArquivo));
            } catch (IOException ex) {
                System.out.println("Error: " + ex);
            }
        }
        else { // imprimir relatório de dados do funcionário
            Funcionario funcionario = listaFuncionarios.get(jComboBoxNomeRelatorio.getSelectedIndex());
            Contrato contrato = new G_Contrato().getContrato(funcionario);
            String nomeArquivo = funcionario.getNome() + new Date().getTime() + ".pdf";
            Document doc = new Document();
            
            if(jComboBoxCriterioFuncionarioRelatorio.getSelectedIndex() == 0) {
                try {
                    PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                    doc.open();
                    doc.add(new Paragraph("RELATÓRIO: Dados do contrato de " + funcionario.getNome() + "inscrito sob o CPF: " + funcionario.getCpf()));
                    doc.add(new Paragraph("com a empresa: " + contrato.getEmpresa().getNomeEmpresa()));                    
                    doc.add(new Paragraph(" "));                    
                    if(jCheckBoxDado1.isSelected()) {
                        doc.add(new Paragraph("Carga horária: " + Float.toString(contrato.getCargaHoraria())));  
                    }
                    if(jCheckBoxDado2.isSelected()) {
                        doc.add(new Paragraph("Hora entrada: " + contrato.getHoraEntrada()));
                    }
                    if(jCheckBoxDado3.isSelected()) {
                        doc.add(new Paragraph("Hora saída: " + contrato.getHoraSaida()));
                    }
                    if(jCheckBoxDado4.isSelected()) {
                        doc.add(new Paragraph("Horas extras: " + Float.toString(contrato.getHorasExtras())));
                    }
                    if(jCheckBoxDado5.isSelected()) {
                        doc.add(new Paragraph("Comissão: " + Float.toString(contrato.getComissao())));
                    }
                    if(jCheckBoxDado6.isSelected()) {
                        doc.add(new Paragraph("Duração: " + Float.toString(contrato.getDuracao())));
                    }
                    if(jCheckBoxDado7.isSelected()) {
                        String exp;
                        if(contrato.isExperiencia()) {
                            exp = "Sim";
                        }
                        else {
                            exp = "Não";
                        }
                        doc.add(new Paragraph("Experiência: " + exp));
                    }
                    if(jCheckBoxDado8.isSelected()) {
                        doc.add(new Paragraph("Férias: " + Integer.toString(contrato.getFerias())));
                    }
                    if(jCheckBoxDado9.isSelected()) {
                        String vt;
                        if(contrato.isValeTransporte()) {
                            vt = "Sim";
                        }
                        else {
                            vt = "Não";
                        }
                        doc.add(new Paragraph("Vale transporte: " + vt));
                    }
                    if(jCheckBoxDado10.isSelected()) {
                        String vr;
                        if(contrato.isValeRefeicao()) {
                            vr = "Sim";
                        }
                        else {
                            vr = "Não";
                        }
                        doc.add(new Paragraph("Vale refeição: " + vr));
                    }
                    if(jCheckBoxDado11.isSelected()) {
                        doc.add(new Paragraph("Salário base: " + Float.toString(contrato.getBaseSalarial())));
                    } 
                    if(jCheckBoxDado12.isSelected()) {
                        doc.add(new Paragraph("Impostos: " + Float.toString(contrato.getImpostos())));
                    }
                } catch (DocumentException | FileNotFoundException ex) {
                    System.out.println("Error: " + ex);
                }
            }
            else {
                ArrayList<Ocorrencia> listaOcorrencia = new G_Ocorrencia().getListaOcorrenciaFuncionario(funcionario);
                try {
                    PdfWriter.getInstance(doc, new FileOutputStream(nomeArquivo));
                    doc.open();
                    doc.add(new Paragraph("RELATÓRIO: Ocorrências de " + funcionario.getNome() + "inscrito sob o CPF: " + funcionario.getCpf()));
                    doc.add(new Paragraph("com a empresa: " + contrato.getEmpresa().getNomeEmpresa()));                    
                    doc.add(new Paragraph(" "));
                    for(Ocorrencia ocorrencia : listaOcorrencia) {
                        if(jCheckBoxDado1.isSelected()) {
                            doc.add(new Paragraph("Data: " + ocorrencia.getDataOcorrencia()));  
                        }
                        if(jCheckBoxDado2.isSelected()) {
                            doc.add(new Paragraph("Tipo: " + ocorrencia.getTipo()));
                        }
                        if(jCheckBoxDado3.isSelected()) {
                            String just;
                            if(ocorrencia.isJustificado()) {
                                just = "Sim";
                            }
                            else {
                                just = "Não";
                            }
                            doc.add(new Paragraph("Justificado " + just));
                        }
                        if(jCheckBoxDado4.isSelected()) {
                            doc.add(new Paragraph("Valor: " + Float.toString(ocorrencia.getValor())));
                        }
                        doc.add(new Paragraph("---------------------------------------------------------------------------------------------------------------------------------"));
                    }
                } catch (DocumentException | FileNotFoundException ex) {
                    System.out.println("Error: " + ex);
                }
            }
            
            doc.close();
            try {
                Desktop.getDesktop().open(new File(nomeArquivo));
            } catch (IOException ex) {
                System.out.println("Error: " + ex);
            }
        }
    }//GEN-LAST:event_jButtonGerarRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRelatoriosGerais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRelatoriosGerais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRelatoriosGerais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRelatoriosGerais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRelatoriosGerais().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAtivo;
    private javax.swing.JButton jButtonGerarRelatorio;
    private javax.swing.JCheckBox jCheckBoxDado1;
    private javax.swing.JCheckBox jCheckBoxDado10;
    private javax.swing.JCheckBox jCheckBoxDado11;
    private javax.swing.JCheckBox jCheckBoxDado12;
    private javax.swing.JCheckBox jCheckBoxDado2;
    private javax.swing.JCheckBox jCheckBoxDado3;
    private javax.swing.JCheckBox jCheckBoxDado4;
    private javax.swing.JCheckBox jCheckBoxDado5;
    private javax.swing.JCheckBox jCheckBoxDado6;
    private javax.swing.JCheckBox jCheckBoxDado7;
    private javax.swing.JCheckBox jCheckBoxDado8;
    private javax.swing.JCheckBox jCheckBoxDado9;
    private javax.swing.JComboBox<String> jComboBoxCriterioFuncionarioRelatorio;
    private javax.swing.JComboBox<String> jComboBoxCriterioRelatorio;
    private javax.swing.JComboBox<String> jComboBoxNomeRelatorio;
    private javax.swing.JLabel jLabelAjudaRelatorio;
    private javax.swing.JLabel jLabelCriterioFuncionarioRelatorio;
    private javax.swing.JLabel jLabelCriterioRelatorio;
    private javax.swing.JLabel jLabelDadosRelatorio;
    private javax.swing.JLabel jLabelNomeFuncionarioRelatorio;
    private javax.swing.JRadioButton jRadioButtonAtivoRelatorio;
    private javax.swing.JRadioButton jRadioButtonNaoAtivoRelatorio;
    // End of variables declaration//GEN-END:variables
}
