package DAO;
// Generated 18/01/2017 16:25:51 by Hibernate Tools 4.3.1


/**
 * Ocorrencia generated by hbm2java
 */
//public class Ocorrencia  implements Observer, java.io.Serializable {
public class Ocorrencia  implements java.io.Serializable {


     private Integer codigo;
     private Funcionario funcionario;
     private String dataOcorrencia;
     private String tipo;
     private boolean justificado;
     private float valor;

    public Ocorrencia() {
    }

    public Ocorrencia(Funcionario funcionario, String dataOcorrencia, String tipo, boolean justificado, float valor) {
       this.funcionario = funcionario;
       this.dataOcorrencia = dataOcorrencia;
       this.tipo = tipo;
       this.justificado = justificado;
       this.valor = valor;
    }
   
    public Integer getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(Integer codigo) {
        this.codigo = codigo;
    }
    public Funcionario getFuncionario() {
        return this.funcionario;
    }
    
    public void setFuncionario(Funcionario funcionario) {
        this.funcionario = funcionario;
    }
    public String getDataOcorrencia() {
        return this.dataOcorrencia;
    }
    
    public void setDataOcorrencia(String dataOcorrencia) {
        this.dataOcorrencia = dataOcorrencia;
    }
    public String getTipo() {
        return this.tipo;
    }
    
    public void setTipo(String tipo) {
        this.tipo = tipo;
    }
    public boolean isJustificado() {
        return this.justificado;
    }
    
    public void setJustificado(boolean justificado) {
        this.justificado = justificado;
    }
    public float getValor() {
        return this.valor;
    }
    
    public void setValor(float valor) {
        this.valor = valor;
    }

    /*
    // OBSERVER
    Observable registroAtividades;
    public Ocorrencia (Observable registroAtividades) {
        this.registroAtividades = registroAtividades;
        registroAtividades.addObserver(this);
    }

    @Override
    public void update(Observable registroAtividadesSubject, Object arg1) {
        
        if (registroAtividadesSubject instanceof RegistroAtividades) {
            RegistroAtividades regAtividades = (RegistroAtividades) registroAtividadesSubject;
            
            Contrato c = ((Contrato) arg1);
            if(regAtividades.getHoraEntrada() == null && regAtividades.getHoraSaida() == null) {
                new G_Ocorrencia().SalvaOcorrencia(regAtividades.getFuncionario(), String.valueOf(Calendar.DATE) + "/" + String.valueOf(Calendar.MONTH) + "/" + String.valueOf(Calendar.YEAR), "atraso", false, (float) 100.0);                               
            } else {
                
                if(Float.parseFloat(regAtividades.getHoraEntrada()) > Float.parseFloat(c.getHoraEntrada())) {
                    new G_Ocorrencia().SalvaOcorrencia(regAtividades.getFuncionario(), String.valueOf(Calendar.DATE) + "/" + String.valueOf(Calendar.MONTH) + "/" + String.valueOf(Calendar.YEAR), "atraso", false, (float) 50.0);
                } else if(Float.parseFloat(c.getHoraEntrada())-Float.parseFloat(regAtividades.getHoraEntrada())>2) {
                    new G_Ocorrencia().SalvaOcorrencia(regAtividades.getFuncionario(), String.valueOf(Calendar.DATE) + "/" + String.valueOf(Calendar.MONTH) + "/" + String.valueOf(Calendar.YEAR), "atraso", false, (float) 50.0);                
                }
                if(Float.parseFloat(regAtividades.getHoraSaida()) < Float.parseFloat(c.getHoraSaida())) {
                    new G_Ocorrencia().SalvaOcorrencia(regAtividades.getFuncionario(), String.valueOf(Calendar.DATE) + "/" + String.valueOf(Calendar.MONTH) + "/" + String.valueOf(Calendar.YEAR), "atraso", false, (float) 50.0);                
                } else if(Float.parseFloat(regAtividades.getHoraSaida())-Float.parseFloat(c.getHoraSaida())>2) {
                    new G_Ocorrencia().SalvaOcorrencia(regAtividades.getFuncionario(), String.valueOf(Calendar.DATE) + "/" + String.valueOf(Calendar.MONTH) + "/" + String.valueOf(Calendar.YEAR), "atraso", false, (float) 50.0);                
                }
            }
            
        }
        
    }	
    */


}


